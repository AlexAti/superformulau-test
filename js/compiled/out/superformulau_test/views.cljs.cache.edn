;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name superformulau-test.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, reagent reagent.core, reagent.core reagent.core, cljsjs.d3 cljsjs.d3, db superformulau-test.db, superformulau-test.db superformulau-test.db}, :uses nil, :defs {sfu-paint {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 139, :column 7, :end-line 139, :end-column 16, :arglists (quote ([size values [x y z] index is-highlighted?]))}, :name superformulau-test.views/sfu-paint, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 16, :method-params ([size values p__37004 index is-highlighted?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 5, :fn-var true, :arglists (quote ([size values [x y z] index is-highlighted?]))}, explanation-panel {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 53, :column 7, :end-line 53, :end-column 24, :arglists (quote ([]))}, :name superformulau-test.views/explanation-panel, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, polar-to-cartesian {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 91, :column 7, :end-line 91, :end-column 25, :arglists (quote ([[angle radium]]))}, :name superformulau-test.views/polar-to-cartesian, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 25, :method-params ([p__36989]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[angle radium]]))}, slider {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 7, :column 7, :end-line 7, :end-column 13, :arglists (quote ([name creature [min max] val]))}, :name superformulau-test.views/slider, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 13, :method-params ([name creature p__36973 val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 4, :fn-var true, :arglists (quote ([name creature [min max] val]))}, superformulau-radium {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 85, :column 7, :end-line 85, :end-column 27, :arglists (quote ([angle [a b y z n1 n2 n3]]))}, :name superformulau-test.views/superformulau-radium, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 27, :method-params ([angle p__36986]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([angle [a b y z n1 n2 n3]]))}, about-panel {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 71, :column 7, :end-line 71, :end-column 18, :arglists (quote ([]))}, :name superformulau-test.views/about-panel, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, slider-panel {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 27, :column 7, :end-line 27, :end-column 19, :arglists (quote ([]))}, :name superformulau-test.views/slider-panel, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, closing-button {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 22, :column 7, :end-line 22, :end-column 21, :arglists (quote ([]))}, :name superformulau-test.views/closing-button, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, svg-defs-section {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 200, :column 7, :end-line 200, :end-column 23, :arglists (quote ([]))}, :name superformulau-test.views/svg-defs-section, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, highlighted-comp {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 193, :column 7, :end-line 193, :end-column 23, :arglists (quote ([values index]))}, :name superformulau-test.views/highlighted-comp, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 23, :method-params ([values index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([values index]))}, sfu-comp {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 186, :column 7, :end-line 186, :end-column 15, :arglists (quote ([values position index]))}, :name superformulau-test.views/sfu-comp, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 15, :method-params ([values position index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 3, :fn-var true, :arglists (quote ([values position index]))}, z-pos-correction {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 96, :column 7, :end-line 96, :end-column 23, :arglists (quote ([z]))}, :name superformulau-test.views/z-pos-correction, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 23, :method-params ([z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([z]))}, app {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 208, :column 7, :end-line 208, :end-column 10, :arglists (quote ([]))}, :name superformulau-test.views/app, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, sfu-figure {:protocol-inline nil, :meta {:file "/Users/alex/Code/superformulau-test/src/cljs/superformulau_test/views.cljs", :line 109, :column 7, :end-line 109, :end-column 17, :arglists (quote ([size] [size position] [size position resolution] [size [x y z] resolution params])), :doc "Returns a superformulaU based figure. Parameters for the function are:\n   - [Mandatory] size: The radium of the base circle.\n   - [Optional] position: An [x y] vector. (0,0) if not provided.\n   - [Optional] resolution: The number of defining points. 64 if not provided.\n   - [Optional] params: A vector of 7 params that define the figure. Random if not provided.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([size] [size position] [size position resolution] [size [x y z] resolution params]), :arglists ([size] [size position] [size position resolution] [size [x y z] resolution params]), :arglists-meta (nil nil nil nil)}}, :name superformulau-test.views/sfu-figure, :variadic false, :file "src/cljs/superformulau_test/views.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([size] [size position] [size position resolution] [size [x y z] resolution params]), :arglists ([size] [size position] [size position resolution] [size [x y z] resolution params]), :arglists-meta (nil nil nil nil)}, :method-params ([size] [size position] [size position resolution] [size [x y z] resolution params]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 4, :fn-var true, :arglists ([size] [size position] [size position resolution] [size [x y z] resolution params]), :doc "Returns a superformulaU based figure. Parameters for the function are:\n   - [Mandatory] size: The radium of the base circle.\n   - [Optional] position: An [x y] vector. (0,0) if not provided.\n   - [Optional] resolution: The number of defining points. 64 if not provided.\n   - [Optional] params: A vector of 7 params that define the figure. Random if not provided."}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :hue :explanation :stdDeviation :min :n3 :select-creature :key :general :creature-list :rerender-mathjax :posz :name :value :component-did-mount :component-did-update :pos :type :n2 :set-sfu-key :on-click :div :z :g :feGaussianBlur :for :div.column :filter :reagent-render :goto-status :creature-change :status :max :div.header :label :id :defs :b :display-name :h2 :form :div.panel :input :h1 :svg.sfu :on-change :toggle-status :a.closing-button :step :p :div.columnated :n1 :href :a :about :in :svg.highlighted}, :order [:div :input :type :name :on-change :min :value :step :max :set-sfu-key :label :for :a.closing-button :on-click :goto-status :general :creature-list :creature-change :div.panel :h2 :a :b :y :z :n1 :n2 :n3 :div.columnated :form :explanation :svg.highlighted :p :href :posz :hue :select-creature :display-name :reagent-render :component-did-mount :component-did-update :g :defs :filter :id :feGaussianBlur :in :stdDeviation :key :status :div.header :div.column :h1 :toggle-status :about :rerender-mathjax :svg.sfu :pos]}, :doc nil}